Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> var EQUAL expression SEMICOLON
Rule 3     expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
Rule 4     var -> VARIABLE
Rule 5     expression -> var
Rule 6     expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
Rule 7     expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
Rule 8     expression -> MINUS expression
Rule 9     expression -> INTEGER
Rule 10    expression -> REAL
Rule 11    expression -> expression PLUS expression
Rule 12    expression -> expression MINUS expression
Rule 13    expression -> expression TIMES expression
Rule 14    expression -> expression NORMAL_DIVIDE expression
Rule 15    expression -> expression INTEGER_DIVIDE expression
Rule 16    expression -> expression MODULUS expression
Rule 17    expression -> expression EXPONENT expression
Rule 18    expression -> TRUE
Rule 19    expression -> FALSE
Rule 20    expression -> NEGATION expression
Rule 21    expression -> expression CONJUNCTION expression
Rule 22    expression -> expression DISJUNCTION expression
Rule 23    expression -> expression LESS_THAN expression
Rule 24    expression -> expression LESS_EQUAL expression
Rule 25    expression -> expression NOT_EQUAL expression
Rule 26    expression -> expression EQUAL_TO expression
Rule 27    expression -> expression GREATER_THAN expression
Rule 28    expression -> expression GREATER_EQUAL expression
Rule 29    comma_elements -> expression
Rule 30    comma_elements -> expression COMMA comma_elements
Rule 31    expression -> OPEN_INDEXING CLOSE_INDEXING
Rule 32    expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING
Rule 33    expression -> STRING
Rule 34    expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
Rule 35    expression -> expression OPEN_INDEXING expression CLOSE_INDEXING
Rule 36    expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
Rule 37    expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
Rule 38    expression -> expression MEMBERSHIP expression
Rule 39    expression -> expression CONS expression

Terminals, with rules where they appear

CLOSE_INDEXING       : 3 31 32 35 37
COMMA                : 30
CONJUNCTION          : 21
CONS                 : 39
DISJUNCTION          : 22
EQUAL                : 2 3
EQUAL_TO             : 26
EXPONENT             : 17
FALSE                : 19
GREATER_EQUAL        : 28
GREATER_THAN         : 27
INTEGER              : 9
INTEGER_DIVIDE       : 15
LEFT_PARENTHESIS     : 6 7 34 36
LESS_EQUAL           : 24
LESS_THAN            : 23
MEMBERSHIP           : 37 38
MINUS                : 8 12
MODULUS              : 16
NEGATION             : 20
NORMAL_DIVIDE        : 14
NOT_EQUAL            : 25
OPEN_INDEXING        : 3 31 32 35 37
PLUS                 : 11
PRINT                : 6
REAL                 : 10
RIGHT_PARENTHESIS    : 6 7 34 36
SEMICOLON            : 2 3 6
STRING               : 33
TIMES                : 13
TRUE                 : 18
TUPLE_INDEXING       : 36
VARIABLE             : 4
error                : 

Nonterminals, with rules where they appear

comma_elements       : 30 32 34 36 37
expression           : 1 2 3 3 3 6 7 8 11 11 12 12 13 13 14 14 15 15 16 16 17 17 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 30 35 35 36 37 38 38 39 39
statement            : 0
var                  : 2 5

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    statement                      shift and go to state 1
    expression                     shift and go to state 2
    var                            shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    $end            reduce using rule 1 (statement -> expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33


state 3

    (2) expression -> var . EQUAL expression SEMICOLON
    (5) expression -> var .

    EQUAL           shift and go to state 34
    OPEN_INDEXING   reduce using rule 5 (expression -> var .)
    PLUS            reduce using rule 5 (expression -> var .)
    MINUS           reduce using rule 5 (expression -> var .)
    TIMES           reduce using rule 5 (expression -> var .)
    NORMAL_DIVIDE   reduce using rule 5 (expression -> var .)
    INTEGER_DIVIDE  reduce using rule 5 (expression -> var .)
    MODULUS         reduce using rule 5 (expression -> var .)
    EXPONENT        reduce using rule 5 (expression -> var .)
    CONJUNCTION     reduce using rule 5 (expression -> var .)
    DISJUNCTION     reduce using rule 5 (expression -> var .)
    LESS_THAN       reduce using rule 5 (expression -> var .)
    LESS_EQUAL      reduce using rule 5 (expression -> var .)
    NOT_EQUAL       reduce using rule 5 (expression -> var .)
    EQUAL_TO        reduce using rule 5 (expression -> var .)
    GREATER_THAN    reduce using rule 5 (expression -> var .)
    GREATER_EQUAL   reduce using rule 5 (expression -> var .)
    MEMBERSHIP      reduce using rule 5 (expression -> var .)
    CONS            reduce using rule 5 (expression -> var .)
    $end            reduce using rule 5 (expression -> var .)
    COMMA           reduce using rule 5 (expression -> var .)
    CLOSE_INDEXING  reduce using rule 5 (expression -> var .)
    RIGHT_PARENTHESIS reduce using rule 5 (expression -> var .)
    LEFT_PARENTHESIS reduce using rule 5 (expression -> var .)
    SEMICOLON       reduce using rule 5 (expression -> var .)


state 4

    (31) expression -> OPEN_INDEXING . CLOSE_INDEXING
    (32) expression -> OPEN_INDEXING . comma_elements CLOSE_INDEXING
    (29) comma_elements -> . expression
    (30) comma_elements -> . expression COMMA comma_elements
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    CLOSE_INDEXING  shift and go to state 35
    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    comma_elements                 shift and go to state 36
    expression                     shift and go to state 37
    var                            shift and go to state 3

state 5

    (6) expression -> PRINT . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 38


state 6

    (7) expression -> LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
    (34) expression -> LEFT_PARENTHESIS . comma_elements RIGHT_PARENTHESIS
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (29) comma_elements -> . expression
    (30) comma_elements -> . expression COMMA comma_elements
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 39
    comma_elements                 shift and go to state 40
    var                            shift and go to state 3

state 7

    (8) expression -> MINUS . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 41
    var                            shift and go to state 3

state 8

    (9) expression -> INTEGER .

    OPEN_INDEXING   reduce using rule 9 (expression -> INTEGER .)
    PLUS            reduce using rule 9 (expression -> INTEGER .)
    MINUS           reduce using rule 9 (expression -> INTEGER .)
    TIMES           reduce using rule 9 (expression -> INTEGER .)
    NORMAL_DIVIDE   reduce using rule 9 (expression -> INTEGER .)
    INTEGER_DIVIDE  reduce using rule 9 (expression -> INTEGER .)
    MODULUS         reduce using rule 9 (expression -> INTEGER .)
    EXPONENT        reduce using rule 9 (expression -> INTEGER .)
    CONJUNCTION     reduce using rule 9 (expression -> INTEGER .)
    DISJUNCTION     reduce using rule 9 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 9 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 9 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 9 (expression -> INTEGER .)
    EQUAL_TO        reduce using rule 9 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 9 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 9 (expression -> INTEGER .)
    MEMBERSHIP      reduce using rule 9 (expression -> INTEGER .)
    CONS            reduce using rule 9 (expression -> INTEGER .)
    $end            reduce using rule 9 (expression -> INTEGER .)
    COMMA           reduce using rule 9 (expression -> INTEGER .)
    CLOSE_INDEXING  reduce using rule 9 (expression -> INTEGER .)
    RIGHT_PARENTHESIS reduce using rule 9 (expression -> INTEGER .)
    LEFT_PARENTHESIS reduce using rule 9 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 9 (expression -> INTEGER .)


state 9

    (10) expression -> REAL .

    OPEN_INDEXING   reduce using rule 10 (expression -> REAL .)
    PLUS            reduce using rule 10 (expression -> REAL .)
    MINUS           reduce using rule 10 (expression -> REAL .)
    TIMES           reduce using rule 10 (expression -> REAL .)
    NORMAL_DIVIDE   reduce using rule 10 (expression -> REAL .)
    INTEGER_DIVIDE  reduce using rule 10 (expression -> REAL .)
    MODULUS         reduce using rule 10 (expression -> REAL .)
    EXPONENT        reduce using rule 10 (expression -> REAL .)
    CONJUNCTION     reduce using rule 10 (expression -> REAL .)
    DISJUNCTION     reduce using rule 10 (expression -> REAL .)
    LESS_THAN       reduce using rule 10 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 10 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 10 (expression -> REAL .)
    EQUAL_TO        reduce using rule 10 (expression -> REAL .)
    GREATER_THAN    reduce using rule 10 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 10 (expression -> REAL .)
    MEMBERSHIP      reduce using rule 10 (expression -> REAL .)
    CONS            reduce using rule 10 (expression -> REAL .)
    $end            reduce using rule 10 (expression -> REAL .)
    COMMA           reduce using rule 10 (expression -> REAL .)
    CLOSE_INDEXING  reduce using rule 10 (expression -> REAL .)
    RIGHT_PARENTHESIS reduce using rule 10 (expression -> REAL .)
    LEFT_PARENTHESIS reduce using rule 10 (expression -> REAL .)
    SEMICOLON       reduce using rule 10 (expression -> REAL .)


state 10

    (18) expression -> TRUE .

    OPEN_INDEXING   reduce using rule 18 (expression -> TRUE .)
    PLUS            reduce using rule 18 (expression -> TRUE .)
    MINUS           reduce using rule 18 (expression -> TRUE .)
    TIMES           reduce using rule 18 (expression -> TRUE .)
    NORMAL_DIVIDE   reduce using rule 18 (expression -> TRUE .)
    INTEGER_DIVIDE  reduce using rule 18 (expression -> TRUE .)
    MODULUS         reduce using rule 18 (expression -> TRUE .)
    EXPONENT        reduce using rule 18 (expression -> TRUE .)
    CONJUNCTION     reduce using rule 18 (expression -> TRUE .)
    DISJUNCTION     reduce using rule 18 (expression -> TRUE .)
    LESS_THAN       reduce using rule 18 (expression -> TRUE .)
    LESS_EQUAL      reduce using rule 18 (expression -> TRUE .)
    NOT_EQUAL       reduce using rule 18 (expression -> TRUE .)
    EQUAL_TO        reduce using rule 18 (expression -> TRUE .)
    GREATER_THAN    reduce using rule 18 (expression -> TRUE .)
    GREATER_EQUAL   reduce using rule 18 (expression -> TRUE .)
    MEMBERSHIP      reduce using rule 18 (expression -> TRUE .)
    CONS            reduce using rule 18 (expression -> TRUE .)
    $end            reduce using rule 18 (expression -> TRUE .)
    COMMA           reduce using rule 18 (expression -> TRUE .)
    CLOSE_INDEXING  reduce using rule 18 (expression -> TRUE .)
    RIGHT_PARENTHESIS reduce using rule 18 (expression -> TRUE .)
    LEFT_PARENTHESIS reduce using rule 18 (expression -> TRUE .)
    SEMICOLON       reduce using rule 18 (expression -> TRUE .)


state 11

    (19) expression -> FALSE .

    OPEN_INDEXING   reduce using rule 19 (expression -> FALSE .)
    PLUS            reduce using rule 19 (expression -> FALSE .)
    MINUS           reduce using rule 19 (expression -> FALSE .)
    TIMES           reduce using rule 19 (expression -> FALSE .)
    NORMAL_DIVIDE   reduce using rule 19 (expression -> FALSE .)
    INTEGER_DIVIDE  reduce using rule 19 (expression -> FALSE .)
    MODULUS         reduce using rule 19 (expression -> FALSE .)
    EXPONENT        reduce using rule 19 (expression -> FALSE .)
    CONJUNCTION     reduce using rule 19 (expression -> FALSE .)
    DISJUNCTION     reduce using rule 19 (expression -> FALSE .)
    LESS_THAN       reduce using rule 19 (expression -> FALSE .)
    LESS_EQUAL      reduce using rule 19 (expression -> FALSE .)
    NOT_EQUAL       reduce using rule 19 (expression -> FALSE .)
    EQUAL_TO        reduce using rule 19 (expression -> FALSE .)
    GREATER_THAN    reduce using rule 19 (expression -> FALSE .)
    GREATER_EQUAL   reduce using rule 19 (expression -> FALSE .)
    MEMBERSHIP      reduce using rule 19 (expression -> FALSE .)
    CONS            reduce using rule 19 (expression -> FALSE .)
    $end            reduce using rule 19 (expression -> FALSE .)
    COMMA           reduce using rule 19 (expression -> FALSE .)
    CLOSE_INDEXING  reduce using rule 19 (expression -> FALSE .)
    RIGHT_PARENTHESIS reduce using rule 19 (expression -> FALSE .)
    LEFT_PARENTHESIS reduce using rule 19 (expression -> FALSE .)
    SEMICOLON       reduce using rule 19 (expression -> FALSE .)


state 12

    (20) expression -> NEGATION . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 42
    var                            shift and go to state 3

state 13

    (33) expression -> STRING .

    OPEN_INDEXING   reduce using rule 33 (expression -> STRING .)
    PLUS            reduce using rule 33 (expression -> STRING .)
    MINUS           reduce using rule 33 (expression -> STRING .)
    TIMES           reduce using rule 33 (expression -> STRING .)
    NORMAL_DIVIDE   reduce using rule 33 (expression -> STRING .)
    INTEGER_DIVIDE  reduce using rule 33 (expression -> STRING .)
    MODULUS         reduce using rule 33 (expression -> STRING .)
    EXPONENT        reduce using rule 33 (expression -> STRING .)
    CONJUNCTION     reduce using rule 33 (expression -> STRING .)
    DISJUNCTION     reduce using rule 33 (expression -> STRING .)
    LESS_THAN       reduce using rule 33 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 33 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 33 (expression -> STRING .)
    EQUAL_TO        reduce using rule 33 (expression -> STRING .)
    GREATER_THAN    reduce using rule 33 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 33 (expression -> STRING .)
    MEMBERSHIP      reduce using rule 33 (expression -> STRING .)
    CONS            reduce using rule 33 (expression -> STRING .)
    $end            reduce using rule 33 (expression -> STRING .)
    COMMA           reduce using rule 33 (expression -> STRING .)
    CLOSE_INDEXING  reduce using rule 33 (expression -> STRING .)
    RIGHT_PARENTHESIS reduce using rule 33 (expression -> STRING .)
    LEFT_PARENTHESIS reduce using rule 33 (expression -> STRING .)
    SEMICOLON       reduce using rule 33 (expression -> STRING .)


state 14

    (36) expression -> TUPLE_INDEXING . expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 43
    var                            shift and go to state 3

state 15

    (4) var -> VARIABLE .

    EQUAL           reduce using rule 4 (var -> VARIABLE .)
    OPEN_INDEXING   reduce using rule 4 (var -> VARIABLE .)
    PLUS            reduce using rule 4 (var -> VARIABLE .)
    MINUS           reduce using rule 4 (var -> VARIABLE .)
    TIMES           reduce using rule 4 (var -> VARIABLE .)
    NORMAL_DIVIDE   reduce using rule 4 (var -> VARIABLE .)
    INTEGER_DIVIDE  reduce using rule 4 (var -> VARIABLE .)
    MODULUS         reduce using rule 4 (var -> VARIABLE .)
    EXPONENT        reduce using rule 4 (var -> VARIABLE .)
    CONJUNCTION     reduce using rule 4 (var -> VARIABLE .)
    DISJUNCTION     reduce using rule 4 (var -> VARIABLE .)
    LESS_THAN       reduce using rule 4 (var -> VARIABLE .)
    LESS_EQUAL      reduce using rule 4 (var -> VARIABLE .)
    NOT_EQUAL       reduce using rule 4 (var -> VARIABLE .)
    EQUAL_TO        reduce using rule 4 (var -> VARIABLE .)
    GREATER_THAN    reduce using rule 4 (var -> VARIABLE .)
    GREATER_EQUAL   reduce using rule 4 (var -> VARIABLE .)
    MEMBERSHIP      reduce using rule 4 (var -> VARIABLE .)
    CONS            reduce using rule 4 (var -> VARIABLE .)
    $end            reduce using rule 4 (var -> VARIABLE .)
    COMMA           reduce using rule 4 (var -> VARIABLE .)
    CLOSE_INDEXING  reduce using rule 4 (var -> VARIABLE .)
    RIGHT_PARENTHESIS reduce using rule 4 (var -> VARIABLE .)
    LEFT_PARENTHESIS reduce using rule 4 (var -> VARIABLE .)
    SEMICOLON       reduce using rule 4 (var -> VARIABLE .)


state 16

    (3) expression -> expression OPEN_INDEXING . expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (35) expression -> expression OPEN_INDEXING . expression CLOSE_INDEXING
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 44
    var                            shift and go to state 3

state 17

    (11) expression -> expression PLUS . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 45
    var                            shift and go to state 3

state 18

    (12) expression -> expression MINUS . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 46
    var                            shift and go to state 3

state 19

    (13) expression -> expression TIMES . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 47
    var                            shift and go to state 3

state 20

    (14) expression -> expression NORMAL_DIVIDE . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 48
    var                            shift and go to state 3

state 21

    (15) expression -> expression INTEGER_DIVIDE . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 49
    var                            shift and go to state 3

state 22

    (16) expression -> expression MODULUS . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 50
    var                            shift and go to state 3

state 23

    (17) expression -> expression EXPONENT . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 51
    var                            shift and go to state 3

state 24

    (21) expression -> expression CONJUNCTION . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 52
    var                            shift and go to state 3

state 25

    (22) expression -> expression DISJUNCTION . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 53
    var                            shift and go to state 3

state 26

    (23) expression -> expression LESS_THAN . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 54
    var                            shift and go to state 3

state 27

    (24) expression -> expression LESS_EQUAL . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 55
    var                            shift and go to state 3

state 28

    (25) expression -> expression NOT_EQUAL . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 56
    var                            shift and go to state 3

state 29

    (26) expression -> expression EQUAL_TO . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 57
    var                            shift and go to state 3

state 30

    (27) expression -> expression GREATER_THAN . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 58
    var                            shift and go to state 3

state 31

    (28) expression -> expression GREATER_EQUAL . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 59
    var                            shift and go to state 3

state 32

    (37) expression -> expression MEMBERSHIP . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression MEMBERSHIP . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    OPEN_INDEXING   shift and go to state 61
    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 60
    var                            shift and go to state 3

state 33

    (39) expression -> expression CONS . expression
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 62
    var                            shift and go to state 3

state 34

    (2) expression -> var EQUAL . expression SEMICOLON
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    var                            shift and go to state 3
    expression                     shift and go to state 63

state 35

    (31) expression -> OPEN_INDEXING CLOSE_INDEXING .

    OPEN_INDEXING   reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    PLUS            reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    MINUS           reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    TIMES           reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    NORMAL_DIVIDE   reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    INTEGER_DIVIDE  reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    MODULUS         reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    EXPONENT        reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    CONJUNCTION     reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    DISJUNCTION     reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    LESS_THAN       reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    LESS_EQUAL      reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    NOT_EQUAL       reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    EQUAL_TO        reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    GREATER_THAN    reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    GREATER_EQUAL   reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    MEMBERSHIP      reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    CONS            reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    $end            reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    COMMA           reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    CLOSE_INDEXING  reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    RIGHT_PARENTHESIS reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    LEFT_PARENTHESIS reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)
    SEMICOLON       reduce using rule 31 (expression -> OPEN_INDEXING CLOSE_INDEXING .)


state 36

    (32) expression -> OPEN_INDEXING comma_elements . CLOSE_INDEXING

    CLOSE_INDEXING  shift and go to state 64


state 37

    (29) comma_elements -> expression .
    (30) comma_elements -> expression . COMMA comma_elements
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CLOSE_INDEXING  reduce using rule 29 (comma_elements -> expression .)
    RIGHT_PARENTHESIS reduce using rule 29 (comma_elements -> expression .)
    COMMA           shift and go to state 65
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33


state 38

    (6) expression -> PRINT LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS SEMICOLON
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 66
    var                            shift and go to state 3

state 39

    (7) expression -> LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression
    (29) comma_elements -> expression .
    (30) comma_elements -> expression . COMMA comma_elements

  ! shift/reduce conflict for RIGHT_PARENTHESIS resolved as shift
    RIGHT_PARENTHESIS shift and go to state 67
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33
    COMMA           shift and go to state 65

  ! RIGHT_PARENTHESIS [ reduce using rule 29 (comma_elements -> expression .) ]


state 40

    (34) expression -> LEFT_PARENTHESIS comma_elements . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 68


state 41

    (8) expression -> MINUS expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    OPEN_INDEXING   reduce using rule 8 (expression -> MINUS expression .)
    PLUS            reduce using rule 8 (expression -> MINUS expression .)
    MINUS           reduce using rule 8 (expression -> MINUS expression .)
    TIMES           reduce using rule 8 (expression -> MINUS expression .)
    NORMAL_DIVIDE   reduce using rule 8 (expression -> MINUS expression .)
    INTEGER_DIVIDE  reduce using rule 8 (expression -> MINUS expression .)
    MODULUS         reduce using rule 8 (expression -> MINUS expression .)
    EXPONENT        reduce using rule 8 (expression -> MINUS expression .)
    CONJUNCTION     reduce using rule 8 (expression -> MINUS expression .)
    DISJUNCTION     reduce using rule 8 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 8 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 8 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 8 (expression -> MINUS expression .)
    EQUAL_TO        reduce using rule 8 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 8 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 8 (expression -> MINUS expression .)
    MEMBERSHIP      reduce using rule 8 (expression -> MINUS expression .)
    CONS            reduce using rule 8 (expression -> MINUS expression .)
    $end            reduce using rule 8 (expression -> MINUS expression .)
    COMMA           reduce using rule 8 (expression -> MINUS expression .)
    CLOSE_INDEXING  reduce using rule 8 (expression -> MINUS expression .)
    RIGHT_PARENTHESIS reduce using rule 8 (expression -> MINUS expression .)
    LEFT_PARENTHESIS reduce using rule 8 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 8 (expression -> MINUS expression .)

  ! OPEN_INDEXING   [ shift and go to state 16 ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! NORMAL_DIVIDE   [ shift and go to state 20 ]
  ! INTEGER_DIVIDE  [ shift and go to state 21 ]
  ! MODULUS         [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 23 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 42

    (20) expression -> NEGATION expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 20 (expression -> NEGATION expression .)
    DISJUNCTION     reduce using rule 20 (expression -> NEGATION expression .)
    $end            reduce using rule 20 (expression -> NEGATION expression .)
    COMMA           reduce using rule 20 (expression -> NEGATION expression .)
    CLOSE_INDEXING  reduce using rule 20 (expression -> NEGATION expression .)
    RIGHT_PARENTHESIS reduce using rule 20 (expression -> NEGATION expression .)
    LEFT_PARENTHESIS reduce using rule 20 (expression -> NEGATION expression .)
    SEMICOLON       reduce using rule 20 (expression -> NEGATION expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! PLUS            [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! MODULUS         [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! EXPONENT        [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! LESS_THAN       [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! LESS_EQUAL      [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! NOT_EQUAL       [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! EQUAL_TO        [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! GREATER_THAN    [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! MEMBERSHIP      [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! CONS            [ reduce using rule 20 (expression -> NEGATION expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]


state 43

    (36) expression -> TUPLE_INDEXING expression . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    LEFT_PARENTHESIS shift and go to state 69
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33


state 44

    (3) expression -> expression OPEN_INDEXING expression . CLOSE_INDEXING EQUAL expression SEMICOLON
    (35) expression -> expression OPEN_INDEXING expression . CLOSE_INDEXING
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CLOSE_INDEXING  shift and go to state 70
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33


state 45

    (11) expression -> expression PLUS expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    PLUS            reduce using rule 11 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 11 (expression -> expression PLUS expression .)
    CONJUNCTION     reduce using rule 11 (expression -> expression PLUS expression .)
    DISJUNCTION     reduce using rule 11 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 11 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 11 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 11 (expression -> expression PLUS expression .)
    EQUAL_TO        reduce using rule 11 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 11 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 11 (expression -> expression PLUS expression .)
    MEMBERSHIP      reduce using rule 11 (expression -> expression PLUS expression .)
    CONS            reduce using rule 11 (expression -> expression PLUS expression .)
    $end            reduce using rule 11 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 11 (expression -> expression PLUS expression .)
    CLOSE_INDEXING  reduce using rule 11 (expression -> expression PLUS expression .)
    RIGHT_PARENTHESIS reduce using rule 11 (expression -> expression PLUS expression .)
    LEFT_PARENTHESIS reduce using rule 11 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression PLUS expression .)
    OPEN_INDEXING   shift and go to state 16
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 46

    (12) expression -> expression MINUS expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    PLUS            reduce using rule 12 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 12 (expression -> expression MINUS expression .)
    CONJUNCTION     reduce using rule 12 (expression -> expression MINUS expression .)
    DISJUNCTION     reduce using rule 12 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 12 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 12 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 12 (expression -> expression MINUS expression .)
    EQUAL_TO        reduce using rule 12 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 12 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 12 (expression -> expression MINUS expression .)
    MEMBERSHIP      reduce using rule 12 (expression -> expression MINUS expression .)
    CONS            reduce using rule 12 (expression -> expression MINUS expression .)
    $end            reduce using rule 12 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 12 (expression -> expression MINUS expression .)
    CLOSE_INDEXING  reduce using rule 12 (expression -> expression MINUS expression .)
    RIGHT_PARENTHESIS reduce using rule 12 (expression -> expression MINUS expression .)
    LEFT_PARENTHESIS reduce using rule 12 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression MINUS expression .)
    OPEN_INDEXING   shift and go to state 16
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 12 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 12 (expression -> expression MINUS expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 12 (expression -> expression MINUS expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 12 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 12 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 12 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 47

    (13) expression -> expression TIMES expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    PLUS            reduce using rule 13 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 13 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 13 (expression -> expression TIMES expression .)
    NORMAL_DIVIDE   reduce using rule 13 (expression -> expression TIMES expression .)
    INTEGER_DIVIDE  reduce using rule 13 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 13 (expression -> expression TIMES expression .)
    CONJUNCTION     reduce using rule 13 (expression -> expression TIMES expression .)
    DISJUNCTION     reduce using rule 13 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 13 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 13 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 13 (expression -> expression TIMES expression .)
    EQUAL_TO        reduce using rule 13 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 13 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 13 (expression -> expression TIMES expression .)
    MEMBERSHIP      reduce using rule 13 (expression -> expression TIMES expression .)
    CONS            reduce using rule 13 (expression -> expression TIMES expression .)
    $end            reduce using rule 13 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 13 (expression -> expression TIMES expression .)
    CLOSE_INDEXING  reduce using rule 13 (expression -> expression TIMES expression .)
    RIGHT_PARENTHESIS reduce using rule 13 (expression -> expression TIMES expression .)
    LEFT_PARENTHESIS reduce using rule 13 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression TIMES expression .)
    OPEN_INDEXING   shift and go to state 16
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 13 (expression -> expression TIMES expression .) ]
  ! EXPONENT        [ reduce using rule 13 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! NORMAL_DIVIDE   [ shift and go to state 20 ]
  ! INTEGER_DIVIDE  [ shift and go to state 21 ]
  ! MODULUS         [ shift and go to state 22 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 48

    (14) expression -> expression NORMAL_DIVIDE expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    PLUS            reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    MINUS           reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    TIMES           reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    NORMAL_DIVIDE   reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    INTEGER_DIVIDE  reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    MODULUS         reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    CONJUNCTION     reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    DISJUNCTION     reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    LESS_THAN       reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    LESS_EQUAL      reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    NOT_EQUAL       reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    EQUAL_TO        reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    GREATER_THAN    reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    MEMBERSHIP      reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    CONS            reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    $end            reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    COMMA           reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    CLOSE_INDEXING  reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    RIGHT_PARENTHESIS reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    LEFT_PARENTHESIS reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .)
    OPEN_INDEXING   shift and go to state 16
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .) ]
  ! EXPONENT        [ reduce using rule 14 (expression -> expression NORMAL_DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! NORMAL_DIVIDE   [ shift and go to state 20 ]
  ! INTEGER_DIVIDE  [ shift and go to state 21 ]
  ! MODULUS         [ shift and go to state 22 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 49

    (15) expression -> expression INTEGER_DIVIDE expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    PLUS            reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    TIMES           reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    NORMAL_DIVIDE   reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    INTEGER_DIVIDE  reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    MODULUS         reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    CONJUNCTION     reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    DISJUNCTION     reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    LESS_THAN       reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    LESS_EQUAL      reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    NOT_EQUAL       reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    EQUAL_TO        reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    GREATER_THAN    reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    MEMBERSHIP      reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    CONS            reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    $end            reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    COMMA           reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    CLOSE_INDEXING  reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    RIGHT_PARENTHESIS reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    LEFT_PARENTHESIS reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .)
    OPEN_INDEXING   shift and go to state 16
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .) ]
  ! EXPONENT        [ reduce using rule 15 (expression -> expression INTEGER_DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! NORMAL_DIVIDE   [ shift and go to state 20 ]
  ! INTEGER_DIVIDE  [ shift and go to state 21 ]
  ! MODULUS         [ shift and go to state 22 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 50

    (16) expression -> expression MODULUS expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    PLUS            reduce using rule 16 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 16 (expression -> expression MODULUS expression .)
    NORMAL_DIVIDE   reduce using rule 16 (expression -> expression MODULUS expression .)
    INTEGER_DIVIDE  reduce using rule 16 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 16 (expression -> expression MODULUS expression .)
    CONJUNCTION     reduce using rule 16 (expression -> expression MODULUS expression .)
    DISJUNCTION     reduce using rule 16 (expression -> expression MODULUS expression .)
    LESS_THAN       reduce using rule 16 (expression -> expression MODULUS expression .)
    LESS_EQUAL      reduce using rule 16 (expression -> expression MODULUS expression .)
    NOT_EQUAL       reduce using rule 16 (expression -> expression MODULUS expression .)
    EQUAL_TO        reduce using rule 16 (expression -> expression MODULUS expression .)
    GREATER_THAN    reduce using rule 16 (expression -> expression MODULUS expression .)
    GREATER_EQUAL   reduce using rule 16 (expression -> expression MODULUS expression .)
    MEMBERSHIP      reduce using rule 16 (expression -> expression MODULUS expression .)
    CONS            reduce using rule 16 (expression -> expression MODULUS expression .)
    $end            reduce using rule 16 (expression -> expression MODULUS expression .)
    COMMA           reduce using rule 16 (expression -> expression MODULUS expression .)
    CLOSE_INDEXING  reduce using rule 16 (expression -> expression MODULUS expression .)
    RIGHT_PARENTHESIS reduce using rule 16 (expression -> expression MODULUS expression .)
    LEFT_PARENTHESIS reduce using rule 16 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression MODULUS expression .)
    OPEN_INDEXING   shift and go to state 16
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 16 (expression -> expression MODULUS expression .) ]
  ! EXPONENT        [ reduce using rule 16 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! NORMAL_DIVIDE   [ shift and go to state 20 ]
  ! INTEGER_DIVIDE  [ shift and go to state 21 ]
  ! MODULUS         [ shift and go to state 22 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 51

    (17) expression -> expression EXPONENT expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    PLUS            reduce using rule 17 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 17 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 17 (expression -> expression EXPONENT expression .)
    NORMAL_DIVIDE   reduce using rule 17 (expression -> expression EXPONENT expression .)
    INTEGER_DIVIDE  reduce using rule 17 (expression -> expression EXPONENT expression .)
    MODULUS         reduce using rule 17 (expression -> expression EXPONENT expression .)
    CONJUNCTION     reduce using rule 17 (expression -> expression EXPONENT expression .)
    DISJUNCTION     reduce using rule 17 (expression -> expression EXPONENT expression .)
    LESS_THAN       reduce using rule 17 (expression -> expression EXPONENT expression .)
    LESS_EQUAL      reduce using rule 17 (expression -> expression EXPONENT expression .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression EXPONENT expression .)
    EQUAL_TO        reduce using rule 17 (expression -> expression EXPONENT expression .)
    GREATER_THAN    reduce using rule 17 (expression -> expression EXPONENT expression .)
    GREATER_EQUAL   reduce using rule 17 (expression -> expression EXPONENT expression .)
    MEMBERSHIP      reduce using rule 17 (expression -> expression EXPONENT expression .)
    CONS            reduce using rule 17 (expression -> expression EXPONENT expression .)
    $end            reduce using rule 17 (expression -> expression EXPONENT expression .)
    COMMA           reduce using rule 17 (expression -> expression EXPONENT expression .)
    CLOSE_INDEXING  reduce using rule 17 (expression -> expression EXPONENT expression .)
    RIGHT_PARENTHESIS reduce using rule 17 (expression -> expression EXPONENT expression .)
    LEFT_PARENTHESIS reduce using rule 17 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression EXPONENT expression .)
    OPEN_INDEXING   shift and go to state 16
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 17 (expression -> expression EXPONENT expression .) ]
  ! EXPONENT        [ reduce using rule 17 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! NORMAL_DIVIDE   [ shift and go to state 20 ]
  ! INTEGER_DIVIDE  [ shift and go to state 21 ]
  ! MODULUS         [ shift and go to state 22 ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 52

    (21) expression -> expression CONJUNCTION expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    DISJUNCTION     reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    $end            reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    COMMA           reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    CLOSE_INDEXING  reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    RIGHT_PARENTHESIS reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    LEFT_PARENTHESIS reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression CONJUNCTION expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! PLUS            [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! MODULUS         [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! EXPONENT        [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! LESS_THAN       [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! LESS_EQUAL      [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! NOT_EQUAL       [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! EQUAL_TO        [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! GREATER_THAN    [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! MEMBERSHIP      [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! CONS            [ reduce using rule 21 (expression -> expression CONJUNCTION expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]


state 53

    (22) expression -> expression DISJUNCTION expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    DISJUNCTION     reduce using rule 22 (expression -> expression DISJUNCTION expression .)
    $end            reduce using rule 22 (expression -> expression DISJUNCTION expression .)
    COMMA           reduce using rule 22 (expression -> expression DISJUNCTION expression .)
    CLOSE_INDEXING  reduce using rule 22 (expression -> expression DISJUNCTION expression .)
    RIGHT_PARENTHESIS reduce using rule 22 (expression -> expression DISJUNCTION expression .)
    LEFT_PARENTHESIS reduce using rule 22 (expression -> expression DISJUNCTION expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression DISJUNCTION expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! PLUS            [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! MODULUS         [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! EXPONENT        [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! CONJUNCTION     [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! LESS_THAN       [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! LESS_EQUAL      [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! NOT_EQUAL       [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! EQUAL_TO        [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! GREATER_THAN    [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! MEMBERSHIP      [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! CONS            [ reduce using rule 22 (expression -> expression DISJUNCTION expression .) ]
  ! DISJUNCTION     [ shift and go to state 25 ]


state 54

    (23) expression -> expression LESS_THAN expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 23 (expression -> expression LESS_THAN expression .)
    DISJUNCTION     reduce using rule 23 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 23 (expression -> expression LESS_THAN expression .)
    LESS_EQUAL      reduce using rule 23 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 23 (expression -> expression LESS_THAN expression .)
    EQUAL_TO        reduce using rule 23 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 23 (expression -> expression LESS_THAN expression .)
    GREATER_EQUAL   reduce using rule 23 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 23 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 23 (expression -> expression LESS_THAN expression .)
    CLOSE_INDEXING  reduce using rule 23 (expression -> expression LESS_THAN expression .)
    RIGHT_PARENTHESIS reduce using rule 23 (expression -> expression LESS_THAN expression .)
    LEFT_PARENTHESIS reduce using rule 23 (expression -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression LESS_THAN expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! MODULUS         [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! MEMBERSHIP      [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! CONS            [ reduce using rule 23 (expression -> expression LESS_THAN expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]


state 55

    (24) expression -> expression LESS_EQUAL expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    DISJUNCTION     reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    LESS_THAN       reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    EQUAL_TO        reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    GREATER_THAN    reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    CLOSE_INDEXING  reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    LEFT_PARENTHESIS reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression LESS_EQUAL expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! MEMBERSHIP      [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! CONS            [ reduce using rule 24 (expression -> expression LESS_EQUAL expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]


state 56

    (25) expression -> expression NOT_EQUAL expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    DISJUNCTION     reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    EQUAL_TO        reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    CLOSE_INDEXING  reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    LEFT_PARENTHESIS reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression NOT_EQUAL expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! MEMBERSHIP      [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! CONS            [ reduce using rule 25 (expression -> expression NOT_EQUAL expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]


state 57

    (26) expression -> expression EQUAL_TO expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    DISJUNCTION     reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    LESS_THAN       reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    LESS_EQUAL      reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    NOT_EQUAL       reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    EQUAL_TO        reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    GREATER_THAN    reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    GREATER_EQUAL   reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    $end            reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    COMMA           reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    CLOSE_INDEXING  reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    RIGHT_PARENTHESIS reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    LEFT_PARENTHESIS reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression EQUAL_TO expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! MODULUS         [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! EXPONENT        [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! MEMBERSHIP      [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! CONS            [ reduce using rule 26 (expression -> expression EQUAL_TO expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]


state 58

    (27) expression -> expression GREATER_THAN expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    DISJUNCTION     reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    LESS_EQUAL      reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    EQUAL_TO        reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    GREATER_EQUAL   reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    CLOSE_INDEXING  reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    RIGHT_PARENTHESIS reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    LEFT_PARENTHESIS reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression GREATER_THAN expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! MODULUS         [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! MEMBERSHIP      [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! CONS            [ reduce using rule 27 (expression -> expression GREATER_THAN expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]


state 59

    (28) expression -> expression GREATER_EQUAL expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    DISJUNCTION     reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    LESS_THAN       reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    EQUAL_TO        reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    GREATER_THAN    reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    CLOSE_INDEXING  reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_PARENTHESIS reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    LEFT_PARENTHESIS reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression GREATER_EQUAL expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! MEMBERSHIP      [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! CONS            [ reduce using rule 28 (expression -> expression GREATER_EQUAL expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]


state 60

    (38) expression -> expression MEMBERSHIP expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    DISJUNCTION     reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    LESS_THAN       reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    EQUAL_TO        reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    GREATER_THAN    reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    MEMBERSHIP      reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    CONS            reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    $end            reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    COMMA           reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    CLOSE_INDEXING  reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    RIGHT_PARENTHESIS reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    LEFT_PARENTHESIS reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression MEMBERSHIP expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23

  ! OPEN_INDEXING   [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! MODULUS         [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression MEMBERSHIP expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! MEMBERSHIP      [ shift and go to state 32 ]
  ! CONS            [ shift and go to state 33 ]


state 61

    (37) expression -> expression MEMBERSHIP OPEN_INDEXING . comma_elements CLOSE_INDEXING
    (31) expression -> OPEN_INDEXING . CLOSE_INDEXING
    (32) expression -> OPEN_INDEXING . comma_elements CLOSE_INDEXING
    (29) comma_elements -> . expression
    (30) comma_elements -> . expression COMMA comma_elements
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    CLOSE_INDEXING  shift and go to state 35
    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 37
    comma_elements                 shift and go to state 71
    var                            shift and go to state 3

state 62

    (39) expression -> expression CONS expression .
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    CONJUNCTION     reduce using rule 39 (expression -> expression CONS expression .)
    DISJUNCTION     reduce using rule 39 (expression -> expression CONS expression .)
    LESS_THAN       reduce using rule 39 (expression -> expression CONS expression .)
    LESS_EQUAL      reduce using rule 39 (expression -> expression CONS expression .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression CONS expression .)
    EQUAL_TO        reduce using rule 39 (expression -> expression CONS expression .)
    GREATER_THAN    reduce using rule 39 (expression -> expression CONS expression .)
    GREATER_EQUAL   reduce using rule 39 (expression -> expression CONS expression .)
    $end            reduce using rule 39 (expression -> expression CONS expression .)
    COMMA           reduce using rule 39 (expression -> expression CONS expression .)
    CLOSE_INDEXING  reduce using rule 39 (expression -> expression CONS expression .)
    RIGHT_PARENTHESIS reduce using rule 39 (expression -> expression CONS expression .)
    LEFT_PARENTHESIS reduce using rule 39 (expression -> expression CONS expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression CONS expression .)
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33

  ! OPEN_INDEXING   [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! MODULUS         [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! MEMBERSHIP      [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! CONS            [ reduce using rule 39 (expression -> expression CONS expression .) ]
  ! CONJUNCTION     [ shift and go to state 24 ]
  ! DISJUNCTION     [ shift and go to state 25 ]
  ! LESS_THAN       [ shift and go to state 26 ]
  ! LESS_EQUAL      [ shift and go to state 27 ]
  ! NOT_EQUAL       [ shift and go to state 28 ]
  ! EQUAL_TO        [ shift and go to state 29 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]


state 63

    (2) expression -> var EQUAL expression . SEMICOLON
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    SEMICOLON       shift and go to state 72
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33


state 64

    (32) expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .

    OPEN_INDEXING   reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    PLUS            reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    MINUS           reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    TIMES           reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    NORMAL_DIVIDE   reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    INTEGER_DIVIDE  reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    MODULUS         reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    EXPONENT        reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    CONJUNCTION     reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    DISJUNCTION     reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    LESS_THAN       reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    LESS_EQUAL      reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    NOT_EQUAL       reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    EQUAL_TO        reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    GREATER_THAN    reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    GREATER_EQUAL   reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    MEMBERSHIP      reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    CONS            reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    $end            reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    COMMA           reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    CLOSE_INDEXING  reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    RIGHT_PARENTHESIS reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    LEFT_PARENTHESIS reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    SEMICOLON       reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)


state 65

    (30) comma_elements -> expression COMMA . comma_elements
    (29) comma_elements -> . expression
    (30) comma_elements -> . expression COMMA comma_elements
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 37
    comma_elements                 shift and go to state 73
    var                            shift and go to state 3

state 66

    (6) expression -> PRINT LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS SEMICOLON
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    RIGHT_PARENTHESIS shift and go to state 74
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33


state 67

    (7) expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    OPEN_INDEXING   reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    NORMAL_DIVIDE   reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    INTEGER_DIVIDE  reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MODULUS         reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    EXPONENT        reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LESS_EQUAL      reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    GREATER_EQUAL   reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    MEMBERSHIP      reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    CONS            reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    $end            reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    CLOSE_INDEXING  reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 7 (expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .)


state 68

    (34) expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .

    OPEN_INDEXING   reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    NORMAL_DIVIDE   reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    INTEGER_DIVIDE  reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    MODULUS         reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    EXPONENT        reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    LESS_EQUAL      reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    GREATER_EQUAL   reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    MEMBERSHIP      reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    CONS            reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    $end            reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    CLOSE_INDEXING  reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 34 (expression -> LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)


state 69

    (36) expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS . comma_elements RIGHT_PARENTHESIS
    (29) comma_elements -> . expression
    (30) comma_elements -> . expression COMMA comma_elements
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 37
    comma_elements                 shift and go to state 75
    var                            shift and go to state 3

state 70

    (3) expression -> expression OPEN_INDEXING expression CLOSE_INDEXING . EQUAL expression SEMICOLON
    (35) expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .

    EQUAL           shift and go to state 76
    OPEN_INDEXING   reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    PLUS            reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    MINUS           reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    TIMES           reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    NORMAL_DIVIDE   reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    INTEGER_DIVIDE  reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    MODULUS         reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    EXPONENT        reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    CONJUNCTION     reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    DISJUNCTION     reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    LESS_THAN       reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    EQUAL_TO        reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    GREATER_THAN    reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    MEMBERSHIP      reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    CONS            reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    $end            reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    COMMA           reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    CLOSE_INDEXING  reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    RIGHT_PARENTHESIS reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    LEFT_PARENTHESIS reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)
    SEMICOLON       reduce using rule 35 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING .)


state 71

    (37) expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements . CLOSE_INDEXING
    (32) expression -> OPEN_INDEXING comma_elements . CLOSE_INDEXING

    CLOSE_INDEXING  shift and go to state 77


state 72

    (2) expression -> var EQUAL expression SEMICOLON .

    OPEN_INDEXING   reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    PLUS            reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    MINUS           reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    TIMES           reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    NORMAL_DIVIDE   reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    INTEGER_DIVIDE  reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    MODULUS         reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    EXPONENT        reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    CONJUNCTION     reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    DISJUNCTION     reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    LESS_THAN       reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    LESS_EQUAL      reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    NOT_EQUAL       reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    EQUAL_TO        reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    GREATER_THAN    reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    GREATER_EQUAL   reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    MEMBERSHIP      reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    CONS            reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    $end            reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    COMMA           reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    CLOSE_INDEXING  reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    RIGHT_PARENTHESIS reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)
    SEMICOLON       reduce using rule 2 (expression -> var EQUAL expression SEMICOLON .)


state 73

    (30) comma_elements -> expression COMMA comma_elements .

    CLOSE_INDEXING  reduce using rule 30 (comma_elements -> expression COMMA comma_elements .)
    RIGHT_PARENTHESIS reduce using rule 30 (comma_elements -> expression COMMA comma_elements .)


state 74

    (6) expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 78


state 75

    (36) expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 79


state 76

    (3) expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL . expression SEMICOLON
    (2) expression -> . var EQUAL expression SEMICOLON
    (3) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (5) expression -> . var
    (6) expression -> . PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON
    (7) expression -> . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
    (8) expression -> . MINUS expression
    (9) expression -> . INTEGER
    (10) expression -> . REAL
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . expression NORMAL_DIVIDE expression
    (15) expression -> . expression INTEGER_DIVIDE expression
    (16) expression -> . expression MODULUS expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . NEGATION expression
    (21) expression -> . expression CONJUNCTION expression
    (22) expression -> . expression DISJUNCTION expression
    (23) expression -> . expression LESS_THAN expression
    (24) expression -> . expression LESS_EQUAL expression
    (25) expression -> . expression NOT_EQUAL expression
    (26) expression -> . expression EQUAL_TO expression
    (27) expression -> . expression GREATER_THAN expression
    (28) expression -> . expression GREATER_EQUAL expression
    (31) expression -> . OPEN_INDEXING CLOSE_INDEXING
    (32) expression -> . OPEN_INDEXING comma_elements CLOSE_INDEXING
    (33) expression -> . STRING
    (34) expression -> . LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (35) expression -> . expression OPEN_INDEXING expression CLOSE_INDEXING
    (36) expression -> . TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS
    (37) expression -> . expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> . expression MEMBERSHIP expression
    (39) expression -> . expression CONS expression
    (4) var -> . VARIABLE

    PRINT           shift and go to state 5
    LEFT_PARENTHESIS shift and go to state 6
    MINUS           shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    TRUE            shift and go to state 10
    FALSE           shift and go to state 11
    NEGATION        shift and go to state 12
    OPEN_INDEXING   shift and go to state 4
    STRING          shift and go to state 13
    TUPLE_INDEXING  shift and go to state 14
    VARIABLE        shift and go to state 15

    expression                     shift and go to state 80
    var                            shift and go to state 3

state 77

    (37) expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .
    (32) expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .

  ! reduce/reduce conflict for OPEN_INDEXING resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for PLUS resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for MINUS resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for TIMES resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for NORMAL_DIVIDE resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for INTEGER_DIVIDE resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for MODULUS resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for EXPONENT resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for CONJUNCTION resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for DISJUNCTION resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for EQUAL_TO resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for MEMBERSHIP resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for CONS resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for $end resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for COMMA resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for CLOSE_INDEXING resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    OPEN_INDEXING   reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    PLUS            reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    MINUS           reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    TIMES           reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    NORMAL_DIVIDE   reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    INTEGER_DIVIDE  reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    MODULUS         reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    EXPONENT        reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    CONJUNCTION     reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    DISJUNCTION     reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    LESS_THAN       reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    LESS_EQUAL      reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    NOT_EQUAL       reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    EQUAL_TO        reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    GREATER_THAN    reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    GREATER_EQUAL   reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    MEMBERSHIP      reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    CONS            reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    $end            reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    COMMA           reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    CLOSE_INDEXING  reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    RIGHT_PARENTHESIS reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    LEFT_PARENTHESIS reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)
    SEMICOLON       reduce using rule 32 (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING .)

  ! OPEN_INDEXING   [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! NORMAL_DIVIDE   [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! MODULUS         [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! CONJUNCTION     [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! DISJUNCTION     [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! LESS_THAN       [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! LESS_EQUAL      [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! NOT_EQUAL       [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! EQUAL_TO        [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! GREATER_THAN    [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! GREATER_EQUAL   [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! MEMBERSHIP      [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! CONS            [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! $end            [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! COMMA           [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! CLOSE_INDEXING  [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]
  ! SEMICOLON       [ reduce using rule 37 (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING .) ]


state 78

    (6) expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .

    OPEN_INDEXING   reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    PLUS            reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    MINUS           reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    TIMES           reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    NORMAL_DIVIDE   reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    INTEGER_DIVIDE  reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    MODULUS         reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    EXPONENT        reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    CONJUNCTION     reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    DISJUNCTION     reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    LESS_THAN       reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    LESS_EQUAL      reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    NOT_EQUAL       reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    EQUAL_TO        reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    GREATER_THAN    reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    GREATER_EQUAL   reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    MEMBERSHIP      reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    CONS            reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    COMMA           reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    CLOSE_INDEXING  reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_PARENTHESIS reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)
    SEMICOLON       reduce using rule 6 (expression -> PRINT LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON .)


state 79

    (36) expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .

    OPEN_INDEXING   reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    TIMES           reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    NORMAL_DIVIDE   reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    INTEGER_DIVIDE  reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    MODULUS         reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    EXPONENT        reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    CONJUNCTION     reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    DISJUNCTION     reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    LESS_EQUAL      reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    EQUAL_TO        reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    GREATER_EQUAL   reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    MEMBERSHIP      reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    CONS            reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    $end            reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    CLOSE_INDEXING  reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 36 (expression -> TUPLE_INDEXING expression LEFT_PARENTHESIS comma_elements RIGHT_PARENTHESIS .)


state 80

    (3) expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression . SEMICOLON
    (3) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (14) expression -> expression . NORMAL_DIVIDE expression
    (15) expression -> expression . INTEGER_DIVIDE expression
    (16) expression -> expression . MODULUS expression
    (17) expression -> expression . EXPONENT expression
    (21) expression -> expression . CONJUNCTION expression
    (22) expression -> expression . DISJUNCTION expression
    (23) expression -> expression . LESS_THAN expression
    (24) expression -> expression . LESS_EQUAL expression
    (25) expression -> expression . NOT_EQUAL expression
    (26) expression -> expression . EQUAL_TO expression
    (27) expression -> expression . GREATER_THAN expression
    (28) expression -> expression . GREATER_EQUAL expression
    (35) expression -> expression . OPEN_INDEXING expression CLOSE_INDEXING
    (37) expression -> expression . MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING
    (38) expression -> expression . MEMBERSHIP expression
    (39) expression -> expression . CONS expression

    SEMICOLON       shift and go to state 81
    OPEN_INDEXING   shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    NORMAL_DIVIDE   shift and go to state 20
    INTEGER_DIVIDE  shift and go to state 21
    MODULUS         shift and go to state 22
    EXPONENT        shift and go to state 23
    CONJUNCTION     shift and go to state 24
    DISJUNCTION     shift and go to state 25
    LESS_THAN       shift and go to state 26
    LESS_EQUAL      shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    EQUAL_TO        shift and go to state 29
    GREATER_THAN    shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    MEMBERSHIP      shift and go to state 32
    CONS            shift and go to state 33


state 81

    (3) expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .

    OPEN_INDEXING   reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    PLUS            reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    MINUS           reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    TIMES           reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    NORMAL_DIVIDE   reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    INTEGER_DIVIDE  reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    MODULUS         reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    EXPONENT        reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    CONJUNCTION     reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    DISJUNCTION     reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    LESS_THAN       reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    LESS_EQUAL      reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    NOT_EQUAL       reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    EQUAL_TO        reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    GREATER_THAN    reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    GREATER_EQUAL   reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    MEMBERSHIP      reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    CONS            reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    $end            reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    COMMA           reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    CLOSE_INDEXING  reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    RIGHT_PARENTHESIS reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)
    SEMICOLON       reduce using rule 3 (expression -> expression OPEN_INDEXING expression CLOSE_INDEXING EQUAL expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RIGHT_PARENTHESIS in state 39 resolved as shift
WARNING: reduce/reduce conflict in state 77 resolved using rule (expression -> OPEN_INDEXING comma_elements CLOSE_INDEXING)
WARNING: rejected rule (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING) in state 77
WARNING: Rule (expression -> expression MEMBERSHIP OPEN_INDEXING comma_elements CLOSE_INDEXING) is never reduced
